{"version":3,"sources":["assets/images/logo.png","api/ajax.js","api/index.js","utils/memoryUtils.js","utils/storageUtils.js","pages/login/login.jsx","utils/dateUtils.js","config/menuConfig.js","components/link-button/index.jsx","components/header/index.jsx","components/left-nav/index.jsx","pages/home/line.jsx","pages/home/home.jsx","pages/category/add-form.jsx","pages/category/update-form.jsx","pages/category/category.jsx","pages/product/update-product.jsx","pages/product/sell-product.jsx","pages/product/home.jsx","pages/product/add-product.jsx","pages/product/product.jsx","pages/user/user-form.jsx","pages/user/update-form.jsx","pages/user/user.jsx","pages/roles/add-form.jsx","pages/roles/auth-form.jsx","pages/roles/role.jsx","pages/charts/bar.jsx","pages/charts/line.jsx","pages/charts/pie.jsx","pages/not-found/not-found.jsx","pages/admin/admin.jsx","app.js","index.js"],"names":["module","exports","ajax","url","data","type","Promise","resolve","reject","axios","get","params","post","then","response","catch","error","message","reqLogin","username","password","reqCategorys","parentId","reqAddCategory","categoryName","reqUpdateCategory","categoryId","reqRemoveCategory","name","reqProducts","pageNum","pageSize","reqSearchProduct","searchName","searchType","reqAddProduct","product","reqRemoveProduct","reqSellProduct","productId","productNum","reqUsers","reqAddOrUpdateUser","user","_id","reqDeleteUser","userId","reqAddRole","roleName","reqUpdateRole","role","reqWeather","jsonp","err","console","log","hours","week","wea","tem","store","set","remove","Login","formRef","React","createRef","onFinish","values","current","validateFields","a","result","status","success","memoryUtils","storageUtils","props","history","replace","msg","this","errorInfo","to","className","initialValues","remember","ref","Item","rules","required","whitespace","min","max","pattern","initialValue","prefix","UserOutlined","placeholder","LockOutlined","htmlType","Component","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","menuList","title","key","icon","HomeOutlined","isPublic","AppstoreOutlined","children","BarsOutlined","ToolOutlined","SafetyCertificateOutlined","AreaChartOutlined","BarChartOutlined","LineChartOutlined","PieChartOutlined","LinkButton","Header","state","currentTime","now","getTime","setInterval","setState","getWeather","getTitle","path","location","pathname","forEach","item","cItem","find","indexOf","logout","confirm","content","okText","cancelText","onOk","clearInterval","intervalId","onClick","withRouter","SubMenu","LeftNav","collapsed","hasAuth","menus","child","getMenuNodes","reduce","pre","openKey","push","menuNodes","src","logo","alt","selectedKeys","defaultOpenKeys","mode","theme","Line","getOption","text","tooltip","trigger","legend","grid","left","right","bottom","containLabel","toolbox","feature","saveAsImage","xAxis","boundaryGap","yAxis","series","stack","option","Home","gutter","span","value","precision","valueStyle","color","ArrowUpOutlined","suffix","ArrowDownOutlined","Option","AddForm","setForm","categorys","map","category","UpdateForm","setFieldsValue","Category","loading","subCategorys","parentName","visible","inintColumns","columns","align","dataIndex","width","render","index","update","showSubCategorys","danger","removeCategory","getCategorys","showCategorys","Add","addCategory","getFieldValue","resetFields","updateCategory","handleCancel","style","margin","extra","dataSource","bordered","rowKey","pagination","defaultPageSize","showQuickJumper","onCancel","UpdateProduct","options","loadData","selectedOptions","targetOption","length","childOptions","c","label","isLeaf","pCategoryId","model","unit","number","Pprice","Oprice","SellProduct","tatol","products","fixed","price","size","Update","removeProduct","sell","getProducts","sellProduct","num","total","onChange","event","target","scroll","x","initOptions","submit","factory","categoryIds","goBack","labelCol","wrapperCol","Product","component","exact","AddProduct","UserForm","roles","Password","phone","email","role_id","User","users","initColumns","roleNames","marginRight","showUpdate","deleteUser","initRoleNames","getUsers","showAdd","addOrUpdateUser","PureComponent","AuthForm","getMenus","checkedKeys","onCheck","nextProps","disabled","checkable","defaultExpandAll","treeData","create_time","getRoles","AddRole","updateRole","auth","auth_time","auth_name","rowSelection","selectedRowKeys","onSelect","onRow","Bar","sales","stores","Pie","formatter","orient","radius","center","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","NotFound","goHome","Footer","Sider","Content","Admin","minHeight","backgroundColor","from","bar","line","pie","textAlign","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9ecc1bb1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.583d0581.png\";","/* \r\n  能发送ajax的函数模块\r\n  封装axios,返回promise对象，集中处理错误\r\n*/\r\nimport axios from 'axios'\r\nimport {message} from 'antd'\r\n\r\nexport default function ajax(url, data={}, type='GET') {\r\n  return new Promise((resolve, reject) => {\r\n    let promise\r\n    if(type==='GET') {\r\n      promise = axios.get(url, {\r\n        params: data \r\n      })\r\n    } else {\r\n      promise = axios.post(url, data)\r\n    }\r\n    promise.then(response => {\r\n      resolve(response.data)\r\n    }).catch(error => {\r\n      message.error('请求出错了: ' + error.message)\r\n    })\r\n  })\r\n}","/* \r\n包含应用中所有接口 请求 的模块\r\nurl 与 type 不变， 只有 参数 data 是变化的\r\n要求：能根据接口文档定义接口请求函数\r\n*/\r\nimport ajax from './ajax'\r\nimport {message} from 'antd'\r\nimport jsonp from 'jsonp'\r\nconst BASE = ''\r\n// 登录\r\nexport const reqLogin = (username,password) => {\r\n  return ajax(BASE+'/login',{username,password},'POST')\r\n}\r\n\r\n\r\n\r\n// 获取一级或某个二级分类列表\r\nexport const reqCategorys = (parentId) => {\r\n  return ajax(BASE+'/manage/category/list',{parentId})\r\n}\r\n\r\n// 添加分类\r\nexport const reqAddCategory = (parentId,categoryName) => ajax(BASE + '/manage/category/add', {parentId,categoryName}, 'POST')\r\n// 更新分类\r\nexport const reqUpdateCategory = ({categoryId, categoryName}) => ajax(BASE + '/manage/category/update', {categoryId, categoryName}, 'POST')\r\n// 删除分类\r\nexport const reqRemoveCategory = (name) => ajax(BASE + '/manage/category/detele',{name},'POST')\r\n\r\n//获取商品分页列表\r\nexport const reqProducts = (pageNum, pageSize) => ajax(BASE + '/manage/product/list', {pageNum, pageSize})\r\n\r\n//搜索商品分页列表\r\n// searchType：商品名称或商品型号\r\nexport const reqSearchProduct = ({pageNum, pageSize, searchName, searchType}) => ajax(BASE + '/manage/product/search', {\r\n  pageNum,\r\n  pageSize,\r\n  [searchType]: searchName,\r\n})\r\n\r\n// 添加商品  修改商品   合二为一\r\n// product._id有值，就是update,没值就是add\r\nexport const reqAddProduct = (product) => ajax(BASE + '/manage/product/add', product, 'POST')\r\n// 修改商品\r\n// export const reqUpdateProduct = (product) => ajax(BASE+'/manage/product/update',product,'POST')\r\n\r\n// 删除商品\r\nexport const reqRemoveProduct = (categoryId) => ajax(BASE + '/manage/product/delete',{categoryId},'POST')\r\n\r\n// 编辑商品\r\nexport const reqUpdateProduct = (product) => ajax(BASE+'/manage/product/update',product,'POST')\r\n// 卖出商品\r\nexport const reqSellProduct = (productId,productNum) => ajax(BASE+'/manage/product/sell',{productId,productNum},'POST')\r\n\r\n\r\n\r\n// 获取用户\r\nexport const reqUsers = () => ajax(BASE + '/manage/user/list')\r\n// 添加/更新用户\r\nexport const reqAddOrUpdateUser = (user) => ajax(BASE + '/manage/user/'+(user._id ? 'update' : 'add'), user, 'POST')\r\n\r\n// 删除用户\r\nexport const reqDeleteUser = (userId) => ajax(BASE+'/manage/user/delete',{userId},'POST') \r\n\r\n\r\n// 获取角色信息\r\nexport const reqRoles = () => ajax(BASE+'/manage/role/list')\r\n// 添加角色\r\nexport const reqAddRole = (roleName) => ajax(BASE+'/manage/role/add',{roleName},'POST')\r\n// 更新角色\r\nexport const reqUpdateRole = (role) => ajax(BASE+'/manage/role/update',role,'POST')\r\n\r\n/*\r\njson请求的接口请求函数\r\n */\r\nexport const reqWeather = () => {\r\n  return new Promise((resolve,reject) => {\r\n    const url = `https://v0.yiketianqi.com/api?version=v62&appid=57658385&appsecret=JgA025en`\r\n  jsonp(url,{},(err,data)=>{\r\n    // console.log('jsonp()',err,data)\r\n    console.log(data.hours[0])\r\n    console.log(data.week)\r\n    if(!err) {\r\n      const {week} = data\r\n      const {wea,tem} = data.hours[0]\r\n      resolve({wea,tem,week})\r\n    } else {\r\n      message.error('获取天气预报失败!')\r\n    }\r\n  })\r\n  })\r\n}","/* \r\n用来在内存保存一些数据的工具模块\r\n*/\r\nexport default {\r\n  user:{}\r\n}","/* \r\n进行local数据存储管理的工具模块\r\n*/\r\nimport store from 'store'\r\nconst USER_KEY = 'user_key'\r\nexport default {\r\n  // 存储user\r\n  saveUser(user){\r\n    // localStorage.setItem( USER_KEY,JSON.stringify(user))\r\n    store.set(USER_KEY,user)\r\n  },\r\n  // 读取\r\n  getUser() {\r\n    // return JSON.parse(localStorage.getItem( USER_KEY) || '{}')\r\n    return store.get(USER_KEY) || {}\r\n  },\r\n  // 删除\r\n  removeUser() {\r\n    // localStorage.removeItem( USER_KEY)\r\n    store.remove(USER_KEY)\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, message } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport {Redirect} from 'react-router-dom'\r\nimport { reqLogin } from \"../../api\";\r\nimport memoryUtils from '../../utils/memoryUtils'\r\nimport storageUtils from '../../utils/storageUtils'\r\nimport \"./login.less\";\r\n\r\nexport default class Login extends Component {\r\n  formRef = React.createRef();\r\n  // 提交表单校验\r\n  onFinish = (values) => {\r\n    //  console.log(values);\r\n    this.formRef.current.validateFields().then(async (values) => {\r\n        // success   必须统一写\r\n        const { username, password } = values;\r\n        // 获取用户信息\r\n        const result = await reqLogin(username, password);\r\n        // {status:,data:user}\r\n        if (result.status === 0) {\r\n          message.success(\"登录成功\");\r\n\r\n          // 保存user到内存中\r\n          const user = result.data;\r\n          memoryUtils.user = user;\r\n          storageUtils.saveUser(user)\r\n\r\n          // 跳转页面\r\n          this.props.history.replace(\"/\");\r\n        } else {\r\n          message.error(result.msg);\r\n        }\r\n      }).catch((errorInfo) => {\r\n        console.log(errorInfo);\r\n      });\r\n  };\r\n  render() {\r\n    // 如果用户已经登录，就自动跳转\r\n    const user = memoryUtils.user\r\n    if(user && user._id) {\r\n      return <Redirect to='/'/>\r\n    }\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"login-content\">\r\n          <h2>小E超市管理系统</h2>\r\n          <Form\r\n            name=\"normal_login\"\r\n            className=\"login-form\"\r\n            initialValues={{\r\n              remember: true,\r\n            }}\r\n            onFinish={this.onFinish}\r\n            ref={this.formRef}\r\n          >\r\n            <Form.Item\r\n              name=\"username\"\r\n              rules={[\r\n                { required: true, whitespace: true, message: \"请输入用户名!\" },\r\n                { min: 4, message: \"用户名至少4位!\" },\r\n                { max: 12, message: \"用户名最多12位!\" },\r\n                {\r\n                  pattern: /^[a-zA-Z0-9_]+$/,\r\n                  message: \"用户名必须由英文、数字或下划线组成!\",\r\n                },\r\n              ]}\r\n              initialValue=\"admin\"\r\n            >\r\n              <Input\r\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                placeholder=\"Username\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                { required: true, message: \"请输入密码!\" },\r\n                { min: 4, message: \"密码至少4位!\" },\r\n                { max: 12, message: \"密码最多12位!\" },\r\n              ]}\r\n              initialValue=\"admin\"\r\n            >\r\n              <Input\r\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n              >\r\n                登录\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/* \r\n  格式化时间\r\n*/\r\nexport function formateDate(time) {\r\n  if (!time) return ''\r\n  let date = new Date(time)\r\n  return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\r\n    + ' '+ date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()\r\n}","import React from 'react'\r\nimport {\r\n    HomeOutlined,/*首页*/\r\n    AppstoreOutlined,/*商品*/\r\n    BarsOutlined,/*品类管理*/\r\n    ToolOutlined,/*商品管理*/\r\n    UserOutlined,/*用户管理*/\r\n    SafetyCertificateOutlined,/*角色管理*/\r\n    AreaChartOutlined,/*图形图表*/\r\n    BarChartOutlined,/*柱形图*/\r\n    LineChartOutlined,/*折线图*/\r\n    PieChartOutlined,/*饼图*/\r\n  } from '@ant-design/icons';\r\n\r\nconst menuList = [\r\n  {\r\n    title: '首页', // 菜单标题名称\r\n    key: '/home', // 对应的path\r\n    icon: <HomeOutlined />, // 图标名称\r\n    isPublic: true, // 公开的\r\n  },\r\n  {\r\n    title: '商品',\r\n    key: '/products',\r\n    icon: <AppstoreOutlined/>,\r\n    children: [ // 子菜单列表\r\n      {\r\n        title: '品类管理',\r\n        key: '/category',\r\n        icon: <BarsOutlined />\r\n      },\r\n      {\r\n        title: '商品管理',\r\n        key: '/product',\r\n        icon: <ToolOutlined />\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    title: '用户管理',\r\n    key: '/user',\r\n    icon: <UserOutlined />\r\n  },\r\n  {\r\n    title: '角色管理',\r\n    key: '/role',\r\n    icon: <SafetyCertificateOutlined />,\r\n  },\r\n  {\r\n    title: '图形图表',\r\n    key: '/charts',\r\n    icon: <AreaChartOutlined />,\r\n    children: [\r\n      {\r\n        title: '柱形图',\r\n        key: '/charts/bar',\r\n        icon: <BarChartOutlined />\r\n      },\r\n      {\r\n        title: '折线图',\r\n        key: '/charts/line',\r\n        icon: <LineChartOutlined />\r\n      },\r\n      {\r\n        title: '饼图',\r\n        key: '/charts/pie',\r\n        icon: <PieChartOutlined />\r\n      },\r\n    ]\r\n  },\r\n]\r\n\r\nexport default menuList","import React from 'react';\r\nimport './index.less';\r\nexport default function LinkButton(props) {\r\n  return <button {...props} className='link-button'></button>\r\n}","import React, { Component } from 'react';\r\nimport {withRouter} from 'react-router-dom'\r\nimport { Modal} from 'antd';\r\nimport {formateDate} from '../../utils/dateUtils'\r\nimport memoryUtils from '../../utils/memoryUtils'\r\nimport menuList from '../../config/menuConfig'\r\nimport storageUtils from '../../utils/storageUtils'\r\nimport {reqWeather} from '../../api'\r\nimport './index.less'\r\nimport LinkButton from '../link-button';\r\nclass Header extends Component {\r\n  state = {\r\n    currentTime: formateDate(Date.now()),\r\n    wea: '',\r\n    tem: '',\r\n    week:''\r\n  }\r\n  getTime = () => {\r\n    setInterval(()=>{\r\n      const currentTime = formateDate(Date.now())\r\n      this.setState({currentTime})\r\n    },1000)\r\n  }\r\n  getWeather = async () => {\r\n    const {wea,tem,week} = await reqWeather()\r\n    this.setState({wea,tem,week})\r\n  }\r\n  getTitle = () => {\r\n    const path = this.props.location.pathname\r\n    let title\r\n    menuList.forEach(item=>{\r\n      if(item.key===path) {\r\n        title = item.title\r\n      } else if(item.children) {\r\n        const cItem = item.children.find(cItem => path.indexOf(cItem.key) === 0)\r\n        if(cItem) {\r\n          title = cItem.title\r\n        }\r\n      }\r\n    })\r\n    return title\r\n  }\r\n  logout = () => {\r\n    // 显示确认框\r\n    Modal.confirm({\r\n      content: '确定退出吗?',\r\n      okText: '确认',\r\n      cancelText: '取消',\r\n      onOk: () => {\r\n        console.log('OK', this)\r\n        // 删除保存的user数据\r\n        storageUtils.removeUser()\r\n        memoryUtils.user = {}\r\n\r\n        // 跳转到login\r\n        this.props.history.replace('/login')\r\n      }\r\n    })\r\n  }\r\n  componentDidMount() {\r\n    this.getTime()\r\n    this.getWeather()\r\n  }\r\n  // 销毁 所有的调用\r\n  componentWillUnmount () {\r\n    // 清除定时器\r\n    clearInterval(this.intervalId)\r\n  }\r\n  render() {\r\n    const {currentTime,wea,tem,week} = this.state\r\n    const username = memoryUtils.user.username\r\n    const title = this.getTitle()\r\n    return (\r\n      <div className=\"Header\">\r\n        <div className=\"Header-top\">\r\n          <span>欢迎,{username}</span>\r\n          <LinkButton onClick = {this.logout} >退出</LinkButton>\r\n        </div>\r\n        <div className=\"Header-bottom\">\r\n          <div className=\"Header-bottom-left\">{title}</div>\r\n          <div className=\"Header-bottom-right\">\r\n            <span>{currentTime}</span>\r\n            <span>{week}</span>\r\n            <span>{wea}</span>\r\n            <span>{tem + '℃'}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// 包装后的组件\r\nexport default withRouter(Header)","import React, { Component } from 'react';\r\nimport {Link,withRouter} from 'react-router-dom';\r\nimport { Menu,} from 'antd';\r\nimport logo from '../../assets/images/logo.png'\r\nimport menuList from '../../config/menuConfig'\r\nimport memoryUtils from \"../../utils/memoryUtils\"\r\nimport './index.less';\r\n\r\nconst { SubMenu } = Menu;\r\n\r\n class LeftNav extends Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  /*\r\n  判断当前登陆用户对item是否有权限\r\n     角色用户权限\r\n   */\r\n  hasAuth = (item) => {\r\n    const {key, isPublic} = item\r\n\r\n    const menus = memoryUtils.user.role.menus\r\n    const username = memoryUtils.user.username\r\n    /*\r\n    1. 如果当前用户是admin\r\n    2. 如果当前item是公开的\r\n    3. 当前用户有此item的权限: key有没有menus中\r\n     */\r\n    if(username==='admin' || isPublic || menus.indexOf(key)!==-1) {\r\n      return true\r\n    } else if(item.children){ // 4. 如果当前用户有此item的某个子item的权限\r\n      // ！！ 如果 找到为 true,没找到为 false\r\n      return !!item.children.find(child =>  menus.indexOf(child.key)!==-1)\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n\r\n\r\n  // 遍历两种方法，map   reduce\r\n  // getMenuNodes_map = (menuList) => {\r\n  //   return menuList.map(item => {\r\n  //     if(!item.children) {\r\n  //       return (\r\n  //         <Menu.Item key={item.key} icon={item.icon}>\r\n  //           <Link to={item.key}>{item.title}</Link>\r\n  //         </Menu.Item>\r\n  //       )\r\n  //     } else {\r\n  //       return (\r\n  //         <SubMenu key={item.key} icon={item.icon} title={item.title}>\r\n  //           {this.getMenuNodes(item.children)}\r\n  //         </SubMenu>\r\n  //       )\r\n  //     }\r\n  //   })\r\n  // }\r\n  getMenuNodes = (menuList) => {\r\n    // 得到当前请求的路由路径\r\n    const path = this.props.location.pathname\r\n\r\n    return menuList.reduce((pre, item) => {\r\n\r\n      // 如果当前用户有item对应的权限, 才需要显示对应的菜单项\r\n     if(this.hasAuth(item)) {\r\n      if(!item.children) {\r\n        pre.push((\r\n          <Menu.Item key={item.key} icon={item.icon}>\r\n            <Link to={item.key}>{item.title}</Link>\r\n          </Menu.Item>\r\n        ))\r\n      } else {\r\n        // 查找一个与当前请求路径匹配的子Item\r\n        const cItem = item.children.find(cItem => path.indexOf(cItem.key)===0)\r\n        // 如果存在, 说明当前item的子列表需要打开\r\n        if (cItem) {\r\n          this.openKey = item.key\r\n        }\r\n        pre.push((\r\n          <SubMenu key={item.key} icon={item.icon} title={item.title}>\r\n            {this.getMenuNodes(item.children)}\r\n          </SubMenu>\r\n        ))\r\n      }\r\n     }\r\n\r\n      return pre\r\n    }, [])\r\n  }\r\n  componentWillMount() {\r\n    this.menuNodes = this.getMenuNodes(menuList)\r\n  }\r\n  render() {\r\n    let path = this.props.location.pathname\r\n\r\n    //  解决路由未选中的 bug\r\n    if(path.indexOf('/product')===0) {\r\n      path = '/product'\r\n    }\r\n\r\n    const openKey = this.openKey\r\n    return (\r\n      <div className=\"left-nav\">\r\n        <Link to='/' className=\"left-nav-header\">\r\n          <img src={logo} alt=\"logo\"/>\r\n          <h1>小E后台</h1>\r\n        </Link>\r\n        <Menu\r\n          // 控制选中的，下面两个\r\n          // defaultSelectedKeys={[path]}\r\n          selectedKeys={[path]}\r\n          defaultOpenKeys={[openKey]}\r\n          mode=\"inline\"\r\n          theme=\"dark\"\r\n          // 控制导航收缩\r\n          // inlineCollapsed={this.state.collapsed}\r\n        >\r\n          {/* <Menu.Item key=\"home\" icon={<HomeOutlined />}>\r\n            <Link to=\"/home\">首页</Link>\r\n          </Menu.Item>\r\n          <SubMenu key=\"sub1\" icon={<HomeOutlined />} title=\"商品\">\r\n            {/* key的值要不一样，才可以选中，因此使用目录定义 */}\r\n          {/* <Menu.Item key=\"category\">\r\n          <Link to=\"/category\">品类管理</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"product\">\r\n          <Link to=\"/product\">商品管理</Link>\r\n          </Menu.Item>\r\n          </SubMenu>  */}\r\n          {\r\n            this.menuNodes\r\n          }\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(LeftNav)","import React,{Component} from 'react'\r\nimport ReactEcharts from 'echarts-for-react';\r\nexport default class Line extends Component {\r\n  getOption = () =>{\r\n    return {\r\n      title: {\r\n        text: '销售统计'\r\n    },\r\n    tooltip: {\r\n        trigger: 'axis'\r\n    },\r\n    legend: {\r\n        data: ['文具', '娃哈哈', '酒', '烟', '蔬菜']\r\n    },\r\n    grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n    },\r\n    toolbox: {\r\n        feature: {\r\n            saveAsImage: {}\r\n        }\r\n    },\r\n    xAxis: {\r\n        type: 'category',\r\n        boundaryGap: false,\r\n        data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\r\n    },\r\n    yAxis: {\r\n        type: 'value'\r\n    },\r\n    series: [\r\n        {\r\n            name: '文具',\r\n            type: 'line',\r\n            stack: '总量',\r\n            data: [120, 132, 101, 134, 90, 230, 210]\r\n        },\r\n        {\r\n            name: '娃哈哈',\r\n            type: 'line',\r\n            stack: '总量',\r\n            data: [220, 182, 191, 234, 290, 330, 310]\r\n        },\r\n        {\r\n            name: '酒',\r\n            type: 'line',\r\n            stack: '总量',\r\n            data: [150, 232, 201, 154, 190, 330, 410]\r\n        },\r\n        {\r\n            name: '烟',\r\n            type: 'line',\r\n            stack: '总量',\r\n            data: [320, 332, 301, 334, 390, 330, 320]\r\n        },\r\n        {\r\n            name: '蔬菜',\r\n            type: 'line',\r\n            stack: '总量',\r\n            data: [820, 932, 901, 934, 1290, 1330, 1320]\r\n        }\r\n    ]\r\n    }\r\n  }\r\n  render () {\r\n    return (\r\n      <div>\r\n        <ReactEcharts option={this.getOption()} />\r\n      </div>\r\n    )\r\n  }\r\n}","/* \r\n  首页路由\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { Statistic, Card, Row, Col } from \"antd\";\r\nimport { ArrowUpOutlined, ArrowDownOutlined } from \"@ant-design/icons\";\r\nimport Line from \"./line\";\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Row gutter={4}>\r\n            <Col span={3}>\r\n              <Card>\r\n                <Statistic\r\n                  title=\"同上周相比\"\r\n                  value={11.28}\r\n                  precision={2}\r\n                  valueStyle={{ color: \"#3f8600\" }}\r\n                  prefix={<ArrowUpOutlined />}\r\n                  suffix=\"%\"\r\n                />\r\n              </Card>\r\n            </Col>\r\n            <Col span={3}>\r\n              <Card>\r\n                <Statistic\r\n                  title=\"同上个月相比\"\r\n                  value={9.3}\r\n                  precision={2}\r\n                  valueStyle={{ color: \"#cf1322\" }}\r\n                  prefix={<ArrowDownOutlined />}\r\n                  suffix=\"%\"\r\n                />\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Line />\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React,{Component} from 'react'\r\nimport { Form, Input, Select } from 'antd'\r\nimport PropTypes from 'prop-types'\r\nconst { Option } = Select;\r\nexport default class AddForm extends Component{\r\n  formRef = React.createRef();\r\n  static propTypes = {\r\n    categorys:PropTypes.array.isRequired,\r\n    parentId:PropTypes.string.isRequired,\r\n    setForm:PropTypes.func.isRequired\r\n  }\r\n  componentWillMount() {\r\n    this.props.setForm(this.formRef)\r\n}\r\n  render() {\r\n    const { categorys,parentId } = this.props\r\n    return (\r\n      <Form  ref={this.formRef}>\r\n        <span>分类级别:</span>\r\n        <Form.Item  name='category' initialValue={parentId}>\r\n          <Select\r\n          >\r\n            <Option value=\"0\">一级分类</Option>\r\n            {\r\n              categorys.map(category => <Option value={category._id}>{category.name}</Option>)\r\n            }\r\n          </Select>\r\n        </Form.Item>\r\n        <span>分类名称:</span>\r\n        <Form.Item  name=\"categoryName\" rules={[{ required: true,message: '分类名称必须输入!'}]}>\r\n          <Input />\r\n        </Form.Item>\r\n      </Form>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Form, Input } from 'antd'\r\n\r\nexport default class UpdateForm extends Component {\r\n  formRef = React.createRef();  \r\n  static propTypes = {\r\n      categoryName:PropTypes.string.isRequired,\r\n      setForm:PropTypes.func.isRequired\r\n  }\r\n  componentDidUpdate() {\r\n      this.formRef.current.setFieldsValue({\r\n          categoryName: this.props.categoryName,\r\n      });\r\n  }\r\n  componentWillMount() {\r\n      this.props.setForm(this.formRef)\r\n  }\r\n  render() {\r\n      const { categoryName } = this.props\r\n      return (\r\n          <Form ref={this.formRef} >\r\n              <Form.Item name='categoryName' initialValue={categoryName} rules={[{ required: true,message: '分类名称必须输入!'}]}>\r\n                  <Input  placeholder='请输入分类名称' ></Input>\r\n              </Form.Item>\r\n          </Form>\r\n      )\r\n  }\r\n}\r\n","/* \r\n  商品分类\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { Card, Button, Table, message,Modal } from \"antd\";\r\nimport { reqCategorys,reqUpdateCategory,reqAddCategory,reqRemoveCategory } from \"../../api\";\r\nimport LinkButton from \"../../components/link-button\"\r\nimport AddForm from './add-form'\r\nimport UpdateForm from './update-form'\r\nexport default class Category extends Component {\r\n  state = {\r\n    loading: false, \r\n    categorys: [], \r\n    subCategorys: [], \r\n    parentId: '0', \r\n    parentName: '', \r\n    visible: 0\r\n  };\r\n  inintColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: \"分类名称\",\r\n        align: \"center\",\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n      },\r\n      {\r\n        title: \"操作\",\r\n        width: 500,\r\n        align: \"center\",\r\n        render: (category,index) => (\r\n          <span>\r\n            <Button type=\"primary\" onClick={() => this.update(category)}>修改分类</Button>\r\n            {this.state.parentId === '0'?<Button type=\"dashed\" onClick={()=>this.showSubCategorys(category)}>查看子分类</Button>:null}\r\n            <Button type=\"primary\" danger onClick={()=>this.removeCategory(index)}>\r\n              删除\r\n            </Button>\r\n          </span>\r\n        ),\r\n      },\r\n    ];\r\n  };\r\n  // 获取一级//二级分类\r\n  getCategorys = async () => {\r\n\r\n    // 在发请求前, 显示loading\r\n    this.setState({loading: true})\r\n    const {parentId} = this.state\r\n    // 发异步ajax请求, 获取数据\r\n    const result = await reqCategorys(parentId)\r\n    // 在请求完成后, 隐藏loading\r\n    this.setState({loading: false})\r\n\r\n    if(result.status===0) {\r\n      // 取出分类数组(可能是一级也可能二级的)\r\n      const categorys = result.data\r\n      if(parentId==='0') {\r\n        // 更新一级分类状态\r\n        this.setState({\r\n          categorys\r\n        })\r\n      } else {\r\n        // 更新二级分类状态\r\n        this.setState({\r\n          subCategorys: categorys\r\n        })\r\n      }\r\n    } else {\r\n      message.error('获取分类列表失败')\r\n    }\r\n  }\r\n  // 获取二级分类\r\n  showSubCategorys = (category) => {\r\n    // 更新状态\r\n    this.setState({\r\n      parentId: category._id,\r\n      parentName: category.name\r\n    }, () => { // 在状态更新且重新render()后执行\r\n      // console.log('parentId', this.state.parentId) // '0'\r\n      // 获取二级分类列表显示\r\n      this.getCategorys()\r\n    })\r\n\r\n    // setState()不能立即获取最新的状态: 因为setState()是异步更新状态的\r\n    // console.log('parentId', this.state.parentId) // '0'\r\n  }\r\n  // 显示一级分类\r\n  showCategorys = () => {\r\n    // 更新为显示一列表的状态\r\n    this.setState({\r\n      parentId: '0',\r\n      parentName: '',\r\n      subCategorys: []\r\n    })\r\n  }\r\n  // 添加商品更新\r\n  Add = () => {\r\n    this.setState({\r\n      visible:1\r\n    })\r\n  }\r\n  addCategory = () => {\r\n    this.formRef.current.validateFields()\r\n      .then( async values=>{\r\n        this.setState({\r\n          visible:0\r\n        })\r\n        const {category,categoryName} = this.formRef.current.getFieldValue()\r\n        console.log(category,categoryName)\r\n        // 清除输入数据\r\n        this.formRef.current.resetFields()\r\n        // 参数的顺序要和接口的参数顺序一致\r\n        const result = await reqAddCategory(category,categoryName)\r\n        if(result.status===0) {\r\n          if(category === this.state.parentId) {\r\n            this.getCategorys()\r\n          } else if(category === '0') {\r\n            // 在二级分类下添加一级分类\r\n            this.getCategorys('0')\r\n          }\r\n        }\r\n      }) \r\n  }\r\n  // 更新\r\n  update = (category) => {\r\n    // 保存分类对象\r\n    this.category = category\r\n    \r\n    this.setState({\r\n      visible: 2\r\n    })\r\n  }\r\n  updateCategory = () => {\r\n    // console.log(this.formRef)\r\n    this.formRef.current.validateFields()\r\n      .then(async values=>{\r\n        this.setState({\r\n          visible:0\r\n        })\r\n        const categoryId = this.category._id\r\n        const {categoryName} = values\r\n        console.log(categoryId,categoryName)\r\n        // 清除输入数据\r\n        this.formRef.current.resetFields()\r\n        const result = await reqUpdateCategory({categoryId, categoryName})\r\n        if (result.status===0) {\r\n          // 3. 重新显示列表\r\n          this.getCategorys()\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  //删除\r\n  removeCategory = async (values)=>{\r\n    console.log(values)\r\n    const {name} = values\r\n    console.log(name)\r\n    const result = await reqRemoveCategory(name)\r\n    if(result.status===0) {\r\n      message.success('删除成功')\r\n      this.getCategorys()\r\n    }\r\n\r\n  }\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: 0\r\n    })\r\n  }\r\n  componentWillMount() {\r\n    this.inintColumns();\r\n  }\r\n  componentDidMount() {\r\n    this.getCategorys();\r\n  }\r\n  render() {\r\n    const {categorys, subCategorys, parentId, parentName, loading,visible} = this.state\r\n\r\n    const category = this.category || {}  \r\n\r\n    const title = parentId === '0'? '一级分类': (\r\n      <span>\r\n        <LinkButton onClick={this.showCategorys}>一级分类列表</LinkButton>\r\n        <span style={{margin:10}}>&gt;</span>\r\n        <span>{parentName}</span>\r\n      </span>\r\n    );\r\n    const extra = <Button type=\"primary\" onClick={this.Add}>添加分类</Button>;\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table\r\n          dataSource={parentId === '0'? categorys : subCategorys }\r\n          columns={this.columns}\r\n          bordered\r\n          rowKey=\"_id\"\r\n          loading={loading}\r\n          pagination={{ defaultPageSize: 5, showQuickJumper: true }}\r\n        />\r\n\r\n        <Modal\r\n          title=\"添加分类\"\r\n          visible={visible === 1}\r\n          okText=\"确定\"\r\n          cancelText =\"取消\"\r\n          onOk={this.addCategory}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <AddForm\r\n          categorys={categorys}\r\n          parentId={parentId}\r\n          setForm = {(formRef)=>{this.formRef=formRef}}/>\r\n        </Modal>\r\n\r\n        <Modal\r\n          title=\"修改分类\"\r\n          visible={visible === 2}\r\n          okText=\"确定\"\r\n          cancelText =\"取消\"\r\n          onOk={this.updateCategory}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <UpdateForm \r\n          categoryName={category.name} \r\n          setForm = {(formRef)=>{this.formRef=formRef}}/>\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Form, Input,Cascader } from 'antd';\r\nexport default class UpdateProduct extends Component {\r\n  formRef = React.createRef();  \r\n  state = {\r\n    options:[]\r\n  }\r\n  \r\n  loadData = async selectedOptions => {\r\n    // 得到选择的option对象\r\n    const targetOption = selectedOptions[0]\r\n    // 显示loading\r\n    targetOption.loading = true\r\n\r\n    // 根据选中的分类, 请求获取二级分类列表\r\n    const subCategorys = await this.getCategorys(targetOption.value)\r\n    // 隐藏loading\r\n    targetOption.loading = false\r\n    // 二级分类数组有数据\r\n    if (subCategorys && subCategorys.length>0) {\r\n      // 生成一个二级列表的options\r\n      const childOptions = subCategorys.map(c => ({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true\r\n      }))\r\n      // 关联到当前option上\r\n      targetOption.children = childOptions\r\n    } else { // 当前选中的分类没有二级分类\r\n      targetOption.isLeaf = true\r\n    }\r\n\r\n    // 更新options状态\r\n    this.setState({\r\n      options: [...this.state.options],\r\n    })\r\n  }\r\n  componentDidUpdate() {\r\n    this.formRef.current.setFieldsValue({\r\n      pCategoryId: this.props.product.pCategoryId,\r\n        categoryId: this.props.product.categoryId,\r\n        name: this.props.product.name,\r\n        model: this.props.product.model,\r\n        unit: this.props.product.unit,\r\n        number: this.props.product.number,\r\n        Pprice: this.props.product.Pprice,\r\n        Oprice: this.props.product.Oprice,\r\n    });\r\n}\r\n  render() {\r\n    const {product} = this.props\r\n    const {/* pCategoryId, categoryId */name,model,unit,number,Pprice,Oprice} = product\r\n    return (\r\n      <Form ref={this.formRef} >\r\n        <Form.Item name=\"name\" label=\"商品名称\" initialValue={name} rules={[{ required: true, message: '请输入商品名称' }]}>\r\n          <Input/>\r\n        </Form.Item>\r\n          <Form.Item name=\"model\" label=\"商品型号\" initialValue={model} rules={[{ required: true, message: '请输入商品型号' }]}>\r\n          <Input />\r\n          </Form.Item>\r\n          <Form.Item name=\"number\" label=\"购买数量\" initialValue={number} rules={[{ required: true, message: '请输入购买数量' }]}>\r\n          <Input />\r\n          </Form.Item>\r\n          <Form.Item name=\"unit\" label=\"单位\" initialValue={unit} rules={[{ required: true, message: '请输入商品单位' }]}>\r\n          <Input />\r\n          </Form.Item>\r\n          <Form.Item name=\"Pprice\" label=\"采购价\" initialValue={Pprice} rules={[{ required: true, message: '请输入采购价' }]}>\r\n          <Input prefix=\"￥\"/>\r\n          </Form.Item>\r\n          <Form.Item name=\"Oprice\" label=\"出售价\" initialValue={Oprice} rules={[{ required: true, message: '请输入出售价' }]}>\r\n            <Input prefix=\"￥\"/>\r\n          </Form.Item>\r\n          <Form.Item name=\"categoryIds\"label=\"商品类别\" >\r\n            <Cascader options={this.state.options} loadData={this.loadData} placeholder=\"请选择商品类别\" />\r\n          </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\nexport default class SellProduct extends Component {\r\n  formRef = React.createRef();  \r\n  componentDidUpdate() {\r\n    this.formRef.current.setFieldsValue({\r\n        name: this.props.product.name\r\n    });\r\n  }\r\n  componentWillMount() {\r\n    this.props.setForm(this.formRef)\r\n  }\r\n  render() {\r\n    const {product} = this.props\r\n    return (\r\n      <Form ref={this.formRef}>\r\n        <Form.Item name=\"name\" label=\"商品名称\" initialValue={product.name} rules={[{ required: true, message: '请输入商品名称' }]}>\r\n          <Input/>\r\n        </Form.Item>\r\n        <Form.Item name=\"num\" label=\"卖出数量\"  rules={[{ required: true, message: '请输入卖出数量' }]}>\r\n          <Input />\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Card,Select,Input,Table,Button, message,Modal } from 'antd';\r\nimport { reqProducts,reqSearchProduct,reqRemoveProduct, reqSellProduct } from '../../api';\r\nimport UpdateProduct from './update-product'\r\nimport SellProduct from './sell-product'\r\nconst { Option } = Select;\r\nexport default class Home extends Component {\r\n  state={\r\n    tatol: 0,\r\n    products: [],\r\n    loading: false,\r\n    searchName:'',\r\n    searchType:'productName',\r\n    visible:0\r\n  }\r\n  inintColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: '商品名称',\r\n        width: 200,\r\n        dataIndex: 'name',\r\n        fixed: 'left'\r\n      },\r\n      {\r\n        title: '型号',\r\n        dataIndex: 'model',\r\n      },\r\n      { title: '单位', dataIndex: 'unit' },\r\n      { title: '数量', dataIndex: 'number'},\r\n      { title: '采购价', dataIndex: 'Pprice', render: (price) => '¥' + price },\r\n      { title: '出售价', dataIndex: 'Oprice',render: (price) => '¥' + price },\r\n      {\r\n        title: '操作',\r\n        key: 'operation',\r\n        fixed: 'right',\r\n        width: 200,\r\n        render: (product,index) => (\r\n          <span>\r\n            <Button type='primary' size='small' onClick={()=>this.Update(product)}>编辑</Button>\r\n            <Button type='primary' danger size='small' style={{margin:'0 10px'}} onClick={()=>this.removeProduct(index)}>删除</Button>\r\n            <Button type='primary' danger size='small' onClick={()=>this.sell(product)}>卖出</Button>\r\n          </span>\r\n        )\r\n      },\r\n    ];\r\n  }\r\n  // 获取商品\r\n  getProducts = async (pageNum) => {\r\n    this.pageNum = pageNum // 保存pageNum, 让其它方法可以看到\r\n    this.setState({loading: true}) // 显示loading\r\n\r\n    const {searchName, searchType} = this.state\r\n    // 如果搜索关键字有值, 说明我们要做搜索分页\r\n    let result\r\n    if (searchName) {\r\n      result = await reqSearchProduct({pageNum, pageSize: 5, searchName, searchType})\r\n    } else { // 一般分页请求\r\n      result = await reqProducts(pageNum)\r\n    }\r\n\r\n    this.setState({loading: false}) // 隐藏loading\r\n    if (result.status === 0) {\r\n      // 取出分页数据, 更新状态, 显示分页列表\r\n      const products = result.data\r\n      this.setState({\r\n        products\r\n      })\r\n    }\r\n  }\r\n  // 删除商品\r\n  removeProduct = async(values) =>{\r\n\r\n    const {categoryId} = values\r\n    const result = await reqRemoveProduct(categoryId)\r\n    if(result.status===0) {\r\n      message.success('删除成功')\r\n      this.getProducts()\r\n    }\r\n  }\r\n  // 编辑商品\r\n  Update = (product) => {\r\n    this.product = product\r\n    console.log(product)\r\n    this.setState({\r\n      visible:1\r\n    })\r\n  }\r\n  UpdateProduct = () =>{\r\n    this.setState({\r\n      visible:0\r\n    })\r\n  }\r\n  handleCancel =()=>{\r\n    this.setState({\r\n      visible:0\r\n    })\r\n  }\r\n  // 卖出商品\r\n  sell=(product)=>{\r\n    this.product = product\r\n    this.setState({\r\n      visible:2\r\n    })\r\n  }\r\n  sellProduct=()=>{\r\n    this.formRef.current.validateFields().then(async value=>{\r\n      this.setState({\r\n        visible:0\r\n      })\r\n      const productId = this.product._id\r\n      const productNum = this.product.number - value.num * 1\r\n      // console.log(productId,productNum)\r\n      // 清除输入数据\r\n      this.formRef.current.resetFields()\r\n     const result = await reqSellProduct(productId,productNum)\r\n     if(result.status===0) {\r\n      this.getProducts()\r\n     }\r\n    })\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.inintColumns()\r\n  }\r\n  componentDidMount () {\r\n    this.getProducts()\r\n  }\r\n  render() {\r\n    const {products,total,loading,searchName,searchType,visible} = this.state\r\n    const product = this.product || {}\r\n    const title = (\r\n      <span>\r\n        <Select value= {searchType} style={{ width: 120 }} onChange={value=>this.setState({searchType:value})}>\r\n          <Option value='productName'>按名称搜索</Option>\r\n          <Option value='productDesc'>按型号搜索</Option>\r\n        </Select>\r\n        <Input placeholder='关键字' style={{width:150,margin:'0 15px'}} value={searchName} onChange={event=>this.setState({searchName:event.target.value})}/>\r\n        <Button type=\"primary\" onClick={()=>this.getProducts(1)}>搜索</Button>\r\n      </span>\r\n    )\r\n    \r\n    \r\n    const extra = (\r\n      <Button type=\"primary\" onClick={()=>this.props.history.push('/product/addupdate')}>添加商品</Button>\r\n    )\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table \r\n        bordered\r\n        loading={loading}\r\n        rowKey='_id'\r\n        columns={this.columns} \r\n        dataSource={products} \r\n        scroll={{ x: 1300 }}\r\n        pagination={{\r\n          current: this.pageNum,\r\n          total, \r\n          defaultPageSize: 5, \r\n          showQuickJumper: true,\r\n          onChange: this.getProducts\r\n        }}\r\n         />\r\n      <Modal\r\n      title=\"修改商品\"\r\n      visible={visible === 1}\r\n      okText=\"确定\"\r\n      cancelText =\"取消\"\r\n      onOk={this.UpdateProduct}\r\n      onCancel={this.handleCancel}\r\n    >\r\n      <UpdateProduct product={product}/>\r\n    </Modal>\r\n      <Modal\r\n      title=\"卖出商品\"\r\n      visible={visible === 2}\r\n      okText=\"确定\"\r\n      cancelText =\"取消\"\r\n      onOk={this.sellProduct}\r\n      onCancel={this.handleCancel}\r\n    >\r\n      <SellProduct product={product} setForm = {(formRef)=>{this.formRef=formRef}}/>\r\n      </Modal>\r\n    \r\n    </Card>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Card,Form, Input,Cascader ,Button,message } from 'antd';\r\nimport { reqCategorys,reqAddProduct} from '../../api'\r\nexport default class UpdateProduct extends Component {\r\n  formRef = React.createRef();\r\n  state = {\r\n    options:[]\r\n  }\r\n  initOptions = (categorys) => {\r\n    // 根据categorys生成options\r\n    const options = categorys.map(c=>({\r\n      value: c._id,\r\n      label: c.name,\r\n      isLeaf: false   // 没有子分页\r\n    }))\r\n    this.setState({options})\r\n  }\r\n  // 获取一级/二级分类\r\n  getCategorys = async (parentId) => {\r\n    const result = await reqCategorys(parentId)   // {status: 0, data: categorys}\r\n    if (result.status===0) {\r\n      const categorys = result.data\r\n      // 如果是一级分类列表\r\n      if (parentId==='0') {\r\n        this.initOptions(categorys)\r\n      } else { // 二级列表\r\n        return categorys  // 返回二级列表 ==> 当前async函数返回的promsie就会成功且value为categorys\r\n      }\r\n    }\r\n  }\r\n  loadData = async selectedOptions => {\r\n    // 得到选择的option对象\r\n    const targetOption = selectedOptions[0]\r\n    // 显示loading\r\n    targetOption.loading = true\r\n\r\n    // 根据选中的分类, 请求获取二级分类列表\r\n    const subCategorys = await this.getCategorys(targetOption.value)\r\n    // 隐藏loading\r\n    targetOption.loading = false\r\n    // 二级分类数组有数据\r\n    if (subCategorys && subCategorys.length>0) {\r\n      // 生成一个二级列表的options\r\n      const childOptions = subCategorys.map(c => ({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true\r\n      }))\r\n      // 关联到当前option上\r\n      targetOption.children = childOptions\r\n    } else { // 当前选中的分类没有二级分类\r\n      targetOption.isLeaf = true\r\n    }\r\n\r\n    // 更新options状态\r\n    this.setState({\r\n      options: [...this.state.options],\r\n    })\r\n  }\r\n  submit = () => {\r\n    this.formRef.current.validateFields().then(async(values)=>{\r\n      // console.log(values)\r\n      const {name,model,number,unit,Pprice,Oprice,factory,categoryIds} = values\r\n      let pCategoryId, categoryId\r\n        if (categoryIds.length===1) {\r\n          pCategoryId = '0'\r\n          categoryId = categoryIds[0]\r\n        } else {\r\n          pCategoryId = categoryIds[0]\r\n          categoryId = categoryIds[1]\r\n        }\r\n      const product = {name,model,number,unit,Pprice,Oprice,factory,categoryId,pCategoryId}\r\n      const result = await reqAddProduct(product)\r\n      if(result.status===0) {\r\n        message.success('添加成功')\r\n        this.props.history.goBack()\r\n      }\r\n    })\r\n  }\r\n  componentDidMount () {\r\n    this.getCategorys('0')\r\n  }\r\n  render() {\r\n    const {options} = this.state\r\n    \r\n    return (\r\n      <Card title=\"添加商品\" bordered={false}>\r\n         <Form\r\n        labelCol={{ span: 5 }}\r\n        wrapperCol={{ span: 8 }}\r\n        ref={this.formRef}\r\n        >\r\n          <Form.Item name=\"name\" label=\"商品名称\" rules={[{ required: true, message: '请输入商品名称' }]}>\r\n          <Input />\r\n          </Form.Item>\r\n          <Form.Item name=\"model\" label=\"商品型号\" rules={[{ required: true, message: '请输入商品型号' }]}>\r\n          <Input />\r\n          </Form.Item>\r\n          <Form.Item name=\"number\" label=\"购买数量\" rules={[{ required: true, message: '请输入购买数量' }]}>\r\n          <Input />\r\n          </Form.Item>\r\n          <Form.Item name=\"unit\" label=\"单位\" rules={[{ required: true, message: '请输入商品单位' }]}>\r\n          <Input />\r\n          </Form.Item>\r\n          <Form.Item name=\"Pprice\" label=\"采购价\" rules={[{ required: true, message: '请输入采购价' }]}>\r\n          <Input prefix=\"￥\"/>\r\n          </Form.Item>\r\n          <Form.Item name=\"Oprice\" label=\"出售价\" rules={[{ required: true, message: '请输入出售价' }]}>\r\n            <Input prefix=\"￥\"/>\r\n          </Form.Item>\r\n          <Form.Item name=\"Factory\" label=\"生产厂家\" rules={[{ required: true, message: '请输入生产厂家' }]}>\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item name=\"categoryIds\"label=\"商品类别\">\r\n            <Cascader options={options} loadData={this.loadData} placeholder=\"请选择商品类别\" />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" style={{margin:'0 360px'}} onClick={this.submit}>提交</Button>\r\n          </Form.Item>\r\n          \r\n        </Form>\r\n    </Card>\r\n    );\r\n  }\r\n}","/* \r\n  商品路由\r\n*/\r\nimport React,{Component} from 'react'\r\nimport {Switch,Route,Redirect} from 'react-router-dom'\r\nimport Home from './home'\r\nimport AddProduct from './add-product'\r\nexport default class Product extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        {/* 统一路由 */}\r\n        <Route path='/product' component={Home} exact/> \r\n        <Route path='/product/addupdate' component={AddProduct}/>\r\n        <Redirect to='/product'/>\r\n      </Switch>\r\n    )\r\n  }\r\n}","import React,{Component} from 'react'\r\nimport { Form, Input,Select} from 'antd';\r\nconst { Option } = Select;\r\nexport default class UserForm extends Component{\r\n  formRef = React.createRef()\r\n  componentWillMount() {\r\n    this.props.setForm(this.formRef)\r\n  }\r\n  render() {\r\n    const {roles} = this.props\r\n    return (\r\n      <Form \r\n      ref = {this.formRef}\r\n      labelCol={{ span: 5 }}\r\n      wrapperCol={{ span: 15 }}>\r\n        <Form.Item\r\n        label=\"用户名\"\r\n        name=\"username\"\r\n        rules={[\r\n                { required: true, whitespace: true, message: \"请输入用户名!\" },\r\n                { min: 4, message: \"用户名至少4位!\" },\r\n                { max: 12, message: \"用户名最多12位!\" },\r\n                {\r\n                  pattern: /^[a-zA-Z0-9_]+$/,\r\n                  message: \"用户名必须由英文、数字或下划线组成!\",\r\n                }\r\n        ]}\r\n        >\r\n          <Input placeholder=\"请输入用户名\"/>\r\n        </Form.Item>\r\n        <Form.Item\r\n        label=\"密码\"\r\n        name=\"password\"\r\n        rules={[\r\n                { required: true, message: \"请输入密码!\" },\r\n                { min: 4, message: \"密码至少4位!\" },\r\n                { max: 12, message: \"密码最多12位!\" },\r\n        ]}\r\n        >\r\n          <Input.Password placeholder=\"请输入密码\"/>\r\n        </Form.Item>\r\n        <Form.Item\r\n        label=\"手机号\"\r\n        name=\"phone\"\r\n        rules={[\r\n          { required: true, message: '请输入用户名' },\r\n          {\r\n            pattern: /^[1][3,4,5,7,8][0-9]{9}$/,\r\n            message: \"请输入手机号!\",\r\n          },\r\n        ]}\r\n        >\r\n         <Input placeholder=\"请输入手机号\"/>\r\n        </Form.Item>\r\n        <Form.Item\r\n        name=\"email\"\r\n        label=\"E-mail\"\r\n        rules={[\r\n          {\r\n            type: 'email',\r\n            message: '请输入邮箱!',\r\n          },\r\n          {\r\n            required: true,\r\n            message: '请输入邮箱!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input placeholder=\"请输入邮箱\"/>\r\n      </Form.Item>\r\n        <Form.Item\r\n        label=\"角色\"\r\n        name=\"role_id\"\r\n        rules={[{ required: true, message: '请输入用户名' }]}\r\n        >\r\n          <Select placeholder=\"请选择角色\">\r\n            {\r\n              roles.map(role => <Option key={role._id} value={role._id}>{role.name}</Option>)\r\n            }\r\n          </Select>\r\n        </Form.Item>\r\n      </Form>\r\n    )\r\n  }\r\n}","import React,{Component} from 'react'\r\nimport { Form, Input,Select} from 'antd';\r\nconst { Option } = Select;\r\nexport default class UserForm extends Component{\r\n  formRef = React.createRef()\r\n  componentWillMount() {\r\n    this.props.setForm(this.formRef)\r\n  }\r\n  render() {\r\n    const {roles,user} = this.props\r\n    return (\r\n      <Form \r\n      ref = {this.formRef}\r\n      labelCol={{ span: 5 }}\r\n      wrapperCol={{ span: 15 }}>\r\n        <Form.Item\r\n        label=\"用户名\"\r\n        name=\"username\"\r\n        initialValue={user.username}\r\n        rules={[{ required: true, message: '请输入用户名' }]}\r\n        >\r\n          <Input placeholder=\"请输入用户名\"/>\r\n        </Form.Item>\r\n        {user._id ? null :(<Form.Item\r\n        label=\"密码\"\r\n        name=\"password\"\r\n        initialValue={user.password}\r\n        rules={[{ required: true, message: '请输入用户名' }]}\r\n        >\r\n          <Input.Password placeholder=\"请输入密码\"/>\r\n        </Form.Item>)}\r\n        <Form.Item\r\n        label=\"手机号\"\r\n        name=\"phone\"\r\n        initialValue={user.phone}\r\n        rules={[{ required: true, message: '请输入用户名' }]}\r\n        >\r\n         <Input placeholder=\"请输入手机号\"/>\r\n        </Form.Item>\r\n        <Form.Item\r\n        name=\"email\"\r\n        label=\"E-mail\"\r\n        initialValue={user.email}\r\n        rules={[\r\n          {\r\n            type: 'email',\r\n            message: '请输入邮箱!',\r\n          },\r\n          {\r\n            required: true,\r\n            message: '请输入邮箱!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input placeholder=\"请输入邮箱\"/>\r\n      </Form.Item>\r\n        <Form.Item\r\n        label=\"角色\"\r\n        name=\"role_id\"\r\n        initialValue={user.role_id}\r\n        rules={[{ required: true, message: '请输入用户名' }]}\r\n        >\r\n          <Select placeholder=\"请选择角色\">\r\n            {\r\n              roles.map(role => <Option key={role._id} value={role._id}>{role.name}</Option>)\r\n            }\r\n          </Select>\r\n        </Form.Item>\r\n      </Form>\r\n    )\r\n  }\r\n}","/* \r\n  用户管理\r\n*/\r\nimport React,{PureComponent} from 'react'\r\nimport { Card,Button,Table, Modal,message } from 'antd'\r\nimport UserForm from './user-form'\r\nimport UpdateForm from './update-form'\r\nimport {reqUsers,reqAddOrUpdateUser,reqDeleteUser} from '../../api'\r\nimport {formateDate} from \"../../utils/dateUtils\"\r\nexport default class User extends PureComponent {\r\n  state={\r\n    users:[],\r\n    roles:[],\r\n    visible:false\r\n  }\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: '用户名',\r\n        dataIndex: 'username'\r\n      },\r\n      {\r\n        title: '邮箱',\r\n        dataIndex: 'email'\r\n      },\r\n\r\n      {\r\n        title: '电话',\r\n        dataIndex: 'phone'\r\n      },\r\n      {\r\n        title: '注册时间',\r\n        dataIndex: 'create_time',\r\n        render: formateDate\r\n      },\r\n      {\r\n        title: '所属角色',\r\n        dataIndex: 'role_id',\r\n        render: (role_id) => this.roleNames[role_id]\r\n      },\r\n      {\r\n        title: '操作',\r\n        render: (user) => (\r\n          <span>\r\n            <Button type=\"primary\" style={{marginRight:15}} onClick={() => this.showUpdate(user)}>修改</Button>\r\n            <Button type=\"primary\" danger onClick={() => this.deleteUser(user)}>删除</Button>\r\n          </span>\r\n        )\r\n      },\r\n    ]\r\n  }\r\n   /*\r\n  根据role的数组, 生成包含所有角色名的对象(属性名用角色id值)\r\n   */\r\n  initRoleNames = (roles) => {\r\n    const roleNames = roles.reduce((pre, role) => {\r\n      pre[role._id] = role.name\r\n      return pre\r\n    }, {})\r\n    // 保存\r\n    this.roleNames = roleNames\r\n  }\r\n  getUsers = async () => {\r\n    const result = await reqUsers()\r\n    if(result.status===0) {\r\n      const {users,roles} = result.data\r\n      this.initRoleNames(roles)\r\n      this.setState({\r\n        users,\r\n        roles\r\n      })\r\n    }\r\n  }\r\n  showAdd = () => {\r\n    this.user = null  //  去除前面保存的user\r\n    this.setState({visible:1})\r\n  }\r\n  // 修改\r\n  showUpdate = (user) => {\r\n    this.user = user\r\n    this.setState({\r\n      visible:2\r\n    })\r\n  }\r\n  addOrUpdateUser = () => {\r\n    this.setState({visible:false})\r\n    this.formRef.current.validateFields().then(async user=>{\r\n      // console.log(user)\r\n      // 如果是更新, 需要给user指定_id属性\r\n    if (this.user) {\r\n      user._id = this.user._id\r\n    }\r\n      this.formRef.current.resetFields()\r\n      const result = await reqAddOrUpdateUser(user)\r\n    if(result.status===0) {\r\n      message.success(`${this.user ? '修改' : '添加'}用户成功`)\r\n      this.getUsers()\r\n    }\r\n    })\r\n  }\r\n  //删除\r\n  deleteUser =(user)=>{\r\n    Modal.confirm({\r\n      title: `确认删除${user.username}吗?`,\r\n      onOk: async () => {\r\n        const result = await reqDeleteUser(user._id)\r\n        if(result.status===0) {\r\n          message.success('删除用户成功!')\r\n          this.getUsers()\r\n        }\r\n      }\r\n    })\r\n  }\r\n  componentWillMount() {\r\n    this.initColumns()\r\n  }\r\n  componentDidMount() {\r\n    this.getUsers()\r\n  }\r\n  render() {\r\n    const {users,visible,roles} = this.state\r\n    const user = this.user || {}\r\n    const title = <Button type=\"primary\" onClick={this.showAdd}>创建用户</Button>\r\n    return (\r\n      <Card title={title}>\r\n        <Table \r\n        bordered\r\n        rowKey='_id'\r\n        columns={this.columns} \r\n        dataSource={users}\r\n        pagination={{defaultPageSize: 5}}\r\n      />\r\n      <Modal\r\n          title='添加用户'\r\n          visible={visible===1}\r\n          okText=\"确定\"\r\n          cancelText =\"取消\"\r\n          onOk={this.addOrUpdateUser}\r\n          onCancel={() => {\r\n            this.setState({visible: false})\r\n          }}\r\n        >\r\n          <UserForm setForm = {formRef => this.formRef = formRef} roles = {roles}/>\r\n      </Modal>\r\n      <Modal\r\n          title='修改用户'\r\n          visible={visible===2}\r\n          okText=\"确定\"\r\n          cancelText =\"取消\"\r\n          onOk={this.addOrUpdateUser}\r\n          onCancel={() =>{\r\n            this.formRef.current.resetFields()\r\n            this.setState({visible: false})\r\n          }}\r\n        >\r\n          <UpdateForm setForm = {formRef => this.formRef = formRef} roles = {roles} user={user}/>\r\n      </Modal>\r\n    </Card>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Form, Input } from 'antd'\r\n\r\nexport default class UpdateForm extends Component {\r\n  formRef = React.createRef();  \r\n  static propTypes = {\r\n      setForm:PropTypes.func.isRequired\r\n  }\r\n  componentWillMount() {\r\n      this.props.setForm(this.formRef)\r\n  }\r\n  render() {\r\n      return (\r\n          <Form ref={this.formRef} >\r\n            <Form.Item\r\n              label=\"用户名称\"\r\n              name=\"roleName\"\r\n              rules={[{ required: true, message: '请输入用户名称' }]}\r\n          >\r\n            <Input />\r\n            </Form.Item>\r\n          </Form>\r\n      )\r\n  }\r\n}\r\n","import React,{Component} from 'react'\r\nimport { Form,Input,Tree } from 'antd';\r\nexport default class AuthForm extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    // 根据传入角色的menus生成初始状态\r\n    const {menus} = this.props.role\r\n    this.state={\r\n      // 确定是否选中\r\n      checkedKeys: menus\r\n    }\r\n  }\r\n  /*\r\n  为父组件提交获取最新menus数据的方法\r\n   */\r\n  getMenus = () => this.state.checkedKeys\r\n  \r\n  // 选中某个node时的回调\r\n  onCheck = checkedKeys => {\r\n    this.setState({ checkedKeys });\r\n  };\r\n   // 根据新传入的role来更新checkedKeys状态\r\n  /*\r\n  当组件接收到新的属性时自动调用\r\n   */\r\n  componentWillReceiveProps (nextProps) {\r\n    // console.log('componentWillReceiveProps()', nextProps)\r\n    const menus = nextProps.role.menus\r\n    this.setState({\r\n      checkedKeys: menus\r\n    })\r\n    // this.state.checkedKeys = menus\r\n  }\r\n  render() {\r\n    const {role} = this.props\r\n    const {checkedKeys} = this.state\r\n    const treeData = [\r\n      {\r\n        title: '平台权限',\r\n        key: 'all',\r\n        children: [\r\n          {\r\n            title: '首页', \r\n            key: '/home',\r\n          },\r\n          {\r\n            title: '商品',\r\n            key: '/products',\r\n            children: [\r\n              { title: '品类管理',key: '/category', },\r\n              { title: '商品管理',key: '/product' },\r\n            ],\r\n          },\r\n          {\r\n            title: '用户管理',\r\n            key: '/user',\r\n          },\r\n          {\r\n            title: '角色管理',\r\n            key: '/role',\r\n          },\r\n          {\r\n            title: '图形图表',\r\n            key: '/charts',\r\n            children: [\r\n              { title: '柱形图', key: '/charts/bar', },\r\n              { title: '折线图',key: '/charts/line', },\r\n              { title: '饼图',key: '/charts/pie', },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n      \r\n    ];\r\n    return (\r\n      <div>\r\n        <Form.Item\r\n          label=\"用户名称\"\r\n          name=\"roleName\"\r\n          rules={[{ required: true, message: '请输入用户名称' }]}\r\n        >\r\n          <Input placeholder={role.name} disabled/>\r\n        </Form.Item>\r\n        <Tree\r\n        checkable\r\n        defaultExpandAll = {true}\r\n        checkedKeys={checkedKeys}\r\n        onCheck={this.onCheck}\r\n        treeData={treeData}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}","/* \r\n    角色管理\r\n*/\r\nimport React, { Component } from 'react';\r\nimport { Card,Button,Table,message,Modal } from 'antd';\r\nimport { reqRoles,reqAddRole,reqUpdateRole } from '../../api';\r\nimport AddForm from './add-form';\r\nimport AuthForm from './auth-form';\r\nimport memoryUtils from \"../../utils/memoryUtils\"\r\nimport {formateDate} from '../../utils/dateUtils'\r\nimport storageUtils from \"../../utils/storageUtils\";\r\nexport default class role extends Component {\r\n  state = {\r\n    roles:[],\r\n    role:{},  // 是否选中的对象\r\n    visible: 0\r\n  }\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.auth = React.createRef()\r\n  }\r\n  initColumns = () => {\r\n    this.columns =  [\r\n      {\r\n        title: '角色名称',\r\n        dataIndex: 'name',\r\n      },\r\n      {\r\n        title: '创建时间',\r\n        dataIndex: 'create_time',\r\n        render: (create_time) => formateDate(create_time)\r\n      },\r\n      {\r\n        title: '授权时间',\r\n        dataIndex: 'auth_time',\r\n        render: formateDate\r\n      },\r\n      {\r\n        title: '授权人',\r\n        dataIndex: 'auth_name',\r\n      }\r\n    ];\r\n  }\r\n  // 获取角色信息\r\n  getRoles = async () => {\r\n    const result = await reqRoles()\r\n    if(result.status===0) {\r\n      const roles = result.data\r\n      this.setState({roles})\r\n    }\r\n  }\r\n  // 添加角色\r\n  AddRole =  ()=>{\r\n    this.formRef.current.validateFields().then(async value=>{\r\n      // console.log(value)\r\n      this.setState({\r\n        visible:0\r\n      })\r\n      const {roleName} = value\r\n      this.formRef.current.resetFields()\r\n      const result = await reqAddRole(roleName)\r\n      if(result.status===0) {\r\n        message.success('创建角色成功')\r\n        this.getRoles()\r\n      }\r\n    })\r\n  }\r\n  // 更新权限\r\n  updateRole = async () => {\r\n    this.setState({\r\n      visible:0\r\n    })\r\n\r\n    const role = this.state.role\r\n    const menus = this.auth.current.getMenus()\r\n    role.menus = menus\r\n    role.auth_time = Date.now()\r\n    role.auth_name = memoryUtils.user.username\r\n    // console.log(role)\r\n    const result = await reqUpdateRole(role)\r\n    if (result.status===0) {\r\n      // this.getRoles()\r\n      // 如果当前更新的是自己角色的权限, 强制退出\r\n      if (role._id === memoryUtils.user.role_id) {\r\n        memoryUtils.user = {}\r\n        storageUtils.removeUser()\r\n        this.props.history.replace('/login')\r\n        message.success('当前用户角色权限修改成功，请重新登录')\r\n      } else {\r\n        message.success('设置角色权限成功')\r\n        this.setState({\r\n          roles: [...this.state.roles]\r\n        })\r\n      }\r\n\r\n    }\r\n  }\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible:0\r\n    })\r\n  }\r\n  componentWillMount(){\r\n    this.initColumns()\r\n  }\r\n  componentDidMount() {\r\n    this.getRoles()\r\n  }\r\n  render() {\r\n    const { roles,role,visible } = this.state\r\n    const title = (\r\n      <span>\r\n        <Button type=\"primary\" style={{marginRight:20}}onClick={() => this.setState({visible: 1})}>创建角色</Button>\r\n        <Button type=\"primary\" disabled={!role._id} onClick={()=> this.setState({visible:2})}>设置角色权限</Button>\r\n      </span>\r\n    )\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n        bordered\r\n        rowKey= '_id'\r\n        columns={this.columns}\r\n        dataSource={roles}\r\n        rowSelection={{type:'radio',selectedRowKeys:[role._id],onSelect: (role) => { // 选择某个radio时回调\r\n          this.setState({\r\n            role\r\n          })\r\n        }}}\r\n        pagination={{\r\n          defaultPageSize: 5, \r\n          showQuickJumper: true,\r\n        }}\r\n        onRow={role => {\r\n          return {\r\n            onClick: event => {\r\n              console.log('Role,Click',role)\r\n              this.setState({role})\r\n            }, // 点击行\r\n          };\r\n        }}\r\n      />\r\n       <Modal\r\n          title=\"添加角色\"\r\n          visible={visible===1}\r\n          okText=\"确定\"\r\n          cancelText =\"取消\"\r\n          onOk={this.AddRole}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <AddForm setForm={formRef=>this.formRef = formRef}/>\r\n      </Modal>\r\n       <Modal\r\n          title=\"设置角色权限\"\r\n          visible={visible===2}\r\n          okText=\"确定\"\r\n          cancelText =\"取消\"\r\n          onOk={this.updateRole}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <AuthForm ref={this.auth} role={role}/>\r\n      </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n}","/* \r\n  柱状图路由\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { Card, Button } from \"antd\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\nexport default class Bar extends Component {\r\n  state={\r\n    sales: [5, 20, 36, 10, 10, 20], // 销量的数组\r\n    stores: [6, 20, 40, 20, 15, 30], // 库存的数组\r\n  }\r\n  update = () => {\r\n    this.setState(state=>({\r\n      sales: state.sales.map(item=>item+1),\r\n      stores: state.stores.reduce((pre,item)=>{\r\n        pre.push(item-1)\r\n        return pre\r\n      },[])\r\n    }))\r\n  }\r\n  getOption = (sales,stores) => {\r\n    return {\r\n      title: {\r\n        text: \"销售柱状图\",\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data: [\"销量\", \"库存\"],\r\n      },\r\n      xAxis: {\r\n        data: [\"文具\", \"蔬菜\", \"烟\", \"酒\", \"零食\", \"娃哈哈\"],\r\n      },\r\n      yAxis: {},\r\n      series: [\r\n        {\r\n          name: \"销量\",\r\n          type: \"bar\",\r\n          data: sales,\r\n        },\r\n        {\r\n          name: \"库存\",\r\n          type: \"bar\",\r\n          data: stores,\r\n        },\r\n      ],\r\n    };\r\n  };\r\n  render() {\r\n    const {sales,stores} = this.state\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type=\"primary\" onClick={this.update}>更新</Button>\r\n        </Card>\r\n        <Card title=\"柱状图\">\r\n          <ReactEcharts option={this.getOption(sales,stores)} />\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/* \r\n  折线图路由\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { Card, Button } from \"antd\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\nexport default class Line extends Component {\r\n  state={\r\n    sales: [5, 20, 36, 10, 10, 20], // 销量的数组\r\n    stores: [6, 20, 40, 20, 15, 30], // 库存的数组\r\n  }\r\n  update = () => {\r\n    this.setState(state=>({\r\n      sales: state.sales.map(item=>item+1),\r\n      stores: state.stores.reduce((pre,item)=>{\r\n        pre.push(item-1)\r\n        return pre\r\n      },[])\r\n    }))\r\n  }\r\n  getOption = (sales,stores) => {\r\n    return {\r\n      title: {\r\n        text: \"销售柱状图\",\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data: [\"销量\", \"库存\"],\r\n      },\r\n      xAxis: {\r\n        data: [\"文具\", \"蔬菜\", \"烟\", \"酒\", \"零食\", \"娃哈哈\"],\r\n      },\r\n      yAxis: {},\r\n      series: [\r\n        {\r\n          name: \"销量\",\r\n          type: \"line\",\r\n          data: sales,\r\n        },\r\n        {\r\n          name: \"库存\",\r\n          type: \"line\",\r\n          data: stores,\r\n        },\r\n      ],\r\n    };\r\n  };\r\n  render() {\r\n    const {sales,stores} = this.state\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type=\"primary\" onClick={this.update}>更新</Button>\r\n        </Card>\r\n        <Card title=\"柱状图\">\r\n          <ReactEcharts option={this.getOption(sales,stores)} />\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/* \r\n  饼状图路由\r\n*/\r\nimport React, { Component } from 'react';\r\nimport {Card} from 'antd';\r\nimport ReactEcharts from \"echarts-for-react\";\r\nexport default class Pie extends Component {\r\n  getOption = () => {\r\n    return {\r\n      title: {\r\n        text: '销售饼状图',\r\n        left: 'center'\r\n    },\r\n    tooltip: {\r\n        trigger: 'item',\r\n        formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n    },\r\n    legend: {\r\n        orient: 'vertical',\r\n        left: 'left',\r\n        data: ['酒', '烟', '娃哈哈', '文具', '蔬菜']\r\n    },\r\n    series: [\r\n        {\r\n            name: '访问来源',\r\n            type: 'pie',\r\n            radius: '80%',\r\n            center: ['50%', '60%'],\r\n            data: [\r\n                {value: 335, name: '酒'},\r\n                {value: 310, name: '烟'},\r\n                {value: 234, name: '娃哈哈'},\r\n                {value: 135, name: '文具'},\r\n                {value: 1548, name: '蔬菜'}\r\n            ],\r\n            emphasis: {\r\n                itemStyle: {\r\n                    shadowBlur: 10,\r\n                    shadowOffsetX: 0,\r\n                    shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                }\r\n            }\r\n        }\r\n    ]\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n        <ReactEcharts option={this.getOption()} />\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import React, {Component} from 'react'\r\nimport {Button, Row, Col} from 'antd'\r\nimport './not-found.less'\r\n\r\n/*\r\n前台404页面\r\n */\r\nexport default class NotFound extends Component {\r\n\r\n  goHome = () => {\r\n    this.props.history.replace('/home')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <Row className='not-found'>\r\n        <Col span={12} className='left'></Col>\r\n        <Col span={12} className='right'>\r\n          <h1>404</h1>\r\n          <h2>抱歉，你访问的页面不存在</h2>\r\n          <div>\r\n            <Button type='primary' onClick={this.goHome}>\r\n              回到首页\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n\r\n","import React,{Component} from 'react'\r\nimport {Redirect,Switch,Route} from 'react-router-dom'\r\nimport { Layout } from 'antd';\r\nimport memoryUtils from '../../utils/memoryUtils'\r\nimport Header from '../../components/header'\r\nimport LeftNav from '../../components/left-nav'\r\nimport Home from '../home/home'\r\nimport category from '../category/category'\r\nimport product from '../product/product'\r\nimport users from '../user/user'\r\nimport role from '../roles/role'\r\nimport bar from '../charts/bar'\r\nimport line from '../charts/line'\r\nimport pie from '../charts/pie'\r\nimport NotFound from '../../pages/not-found/not-found'\r\nconst { Footer, Sider, Content } = Layout;\r\nexport default class Admin extends Component{\r\n  render() {\r\n    const user = memoryUtils.user\r\n    if(!user || !user._id) {\r\n      return <Redirect to=\"/login\"/>\r\n    }\r\n    return (\r\n      <Layout style={{minHeight: '100%'}}>\r\n        <Sider>\r\n          <LeftNav/>\r\n        </Sider>\r\n        <Layout>\r\n          <Header>Header</Header>\r\n          <Content style={{margin: 20,backgroundColor:'#fff'}}>\r\n            <Switch>\r\n              <Redirect exact from='/' to='/home'/>\r\n              <Route path='/home' component={Home}/>\r\n              <Route path='/category' component={category}/>\r\n              <Route path='/product' component={product}/>\r\n              <Route path='/user' component={users}/>\r\n              <Route path='/role' component={role}/>\r\n              <Route path='/charts/bar' component={bar}/>\r\n              <Route path='/charts/line' component={line}/>\r\n              <Route path='/charts/pie' component={pie}/>\r\n              <Route component={NotFound}/>\r\n            </Switch>\r\n          </Content>\r\n          <Footer style={{textAlign: \"center\"}}>推荐使用谷歌浏览器，可以获得更佳页面操作体验</Footer>\r\n        </Layout>\r\n      </Layout>\r\n    )\r\n  }\r\n}","import React,{Component} from 'react'\r\nimport {BrowserRouter,Route,Switch} from 'react-router-dom'\r\nimport Login from './pages/login/login'\r\nimport Admin from './pages/admin/admin'\r\nexport default class App extends Component{\r\n  render() {\r\n    return (\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route path=\"/login\" component={Login}></Route>\r\n            <Route path=\"/\" component={Admin}></Route>\r\n          </Switch>\r\n        </BrowserRouter>\r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './app'\r\nimport 'antd/dist/antd.css'\r\n\r\nimport memoryUtils from './utils/memoryUtils'\r\nimport storageUtils from './utils/storageUtils'\r\n\r\nconst user = storageUtils.getUser()\r\nmemoryUtils.user = user\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'))\r\n"],"sourceRoot":""}